"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7211],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var o=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var a=o.createContext({}),p=function(e){var n=o.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=p(e.components);return o.createElement(a.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,a=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(t),d=i,f=m["".concat(a,".").concat(d)]||m[d]||u[d]||r;return t?o.createElement(f,s(s({ref:n},c),{},{components:t})):o.createElement(f,s({ref:n},c))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,s=new Array(r);s[0]=m;var l={};for(var a in n)hasOwnProperty.call(n,a)&&(l[a]=n[a]);l.originalType=e,l.mdxType="string"==typeof e?e:i,s[1]=l;for(var p=2;p<r;p++)s[p]=t[p];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9589:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var o=t(7462),i=(t(7294),t(3905));const r={sidebar_position:4},s="kusion compile",l={unversionedId:"user_docs/reference/cli/kusion/compile",id:"user_docs/reference/cli/kusion/compile",title:"kusion compile",description:"Compile KCL into YAML",source:"@site/docs/user_docs/reference/cli/kusion/compile.md",sourceDirName:"user_docs/reference/cli/kusion",slug:"/user_docs/reference/cli/kusion/compile",permalink:"/docs/user_docs/reference/cli/kusion/compile",draft:!1,editUrl:"https://github.com/KusionStack/kusionstack.io/blob/main/docs/user_docs/reference/cli/kusion/compile.md",tags:[],version:"current",lastUpdatedBy:"Kan Wu",lastUpdatedAt:1695794467,formattedLastUpdatedAt:"Sep 27, 2023",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"user_docs",previous:{title:"kusion init",permalink:"/docs/user_docs/reference/cli/kusion/init"},next:{title:"kusion preview",permalink:"/docs/user_docs/reference/cli/kusion/preview"}},a={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Examples",id:"examples",level:2},{value:"Options",id:"options",level:2},{value:"SEE ALSO",id:"see-also",level:2},{value:"Auto generated by spf13/cobra on 15-Jul-2023",id:"auto-generated-by-spf13cobra-on-15-jul-2023",level:6}],c={toc:p};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"kusion-compile"},"kusion compile"),(0,i.kt)("p",null,"Compile KCL into YAML"),(0,i.kt)("h2",{id:"synopsis"},"Synopsis"),(0,i.kt)("p",null,"Compile one or more KCL files."),(0,i.kt)("p",null,"The KCL filename must be specified. You can specify a list of arguments to replace the placeholders defined in KCL, and output the compiled results to a file when using --output flag."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"kusion compile [flags]\n")),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  # Compile configuration in main.k into YAML format\n  kusion compile main.k\n  \n  # Compile main.k with arguments\n  kusion compile main.k -D name=test -D age=18\n  \n  # Compile main.k with arguments from settings.yaml\n  kusion compile main.k -Y settings.yaml\n  \n  # Compile main.k with work directory\n  kusion compile main.k -w appops/demo/dev\n  \n  # Compile with override\n  kusion compile -O __main__:appConfiguration.image=nginx:latest -a\n  \n  # Compile main.k and write result into output.yaml\n  kusion compile main.k -o output.yaml\n  \n  # Complie without output style and color\n  kusion compile --no-style=true\n")),(0,i.kt)("h2",{id:"options"},"Options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  -D, --argument stringArray   Specify the top-level argument\n  -n, --disable-none           Disable dumping None values\n  -h, --help                   help for compile\n      --no-style               Disable the output style and color\n  -o, --output string          Specify the output file\n  -a, --override-AST           Specify the override option\n  -O, --overrides strings      Specify the configuration override path and value\n  -Y, --setting strings        Specify the command line setting files\n  -w, --workdir string         Specify the work directory\n")),(0,i.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/user_docs/reference/cli/kusion/"},"kusion"),"\t - Kusion is the platform engineering engine of KusionStack")),(0,i.kt)("h6",{id:"auto-generated-by-spf13cobra-on-15-jul-2023"},"Auto generated by spf13/cobra on 15-Jul-2023"))}u.isMDXComponent=!0}}]);