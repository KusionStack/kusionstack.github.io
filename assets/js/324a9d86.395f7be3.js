"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1643],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(n),f=i,g=p["".concat(c,".").concat(f)]||p[f]||d[f]||o;return n?r.createElement(g,a(a({ref:t},l),{},{components:n})):r.createElement(g,a({ref:t},l))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},93921:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=n(87462),i=(n(67294),n(3905));const o={},a="Differentiated Configurations",s={unversionedId:"user_docs/guides/working-with-k8s/differentiated-configuration",id:"user_docs/guides/working-with-k8s/differentiated-configuration",title:"Differentiated Configurations",description:"In the KCL code of the application, you can set the required differential configuration by adding an if-else statement with magic variables,",source:"@site/docs/user_docs/guides/working-with-k8s/7-differentiated-configuration.md",sourceDirName:"user_docs/guides/working-with-k8s",slug:"/user_docs/guides/working-with-k8s/differentiated-configuration",permalink:"/docs/user_docs/guides/working-with-k8s/differentiated-configuration",draft:!1,editUrl:"https://github.com/KusionStack/kusionstack.io/blob/main/docs/user_docs/guides/working-with-k8s/7-differentiated-configuration.md",tags:[],version:"current",lastUpdatedBy:"dependabot[bot]",lastUpdatedAt:1690428760,formattedLastUpdatedAt:"Jul 27, 2023",sidebarPosition:7,frontMatter:{},sidebar:"user_docs",previous:{title:"Configure Resource Specification",permalink:"/docs/user_docs/guides/working-with-k8s/resource-spec"},next:{title:"Ensure Configuration Code Quality of Konfig via GitHub Actions",permalink:"/docs/user_docs/guides/github-actions/ensure-configuration-code-quality-of-konfig-via-github-actions"}},c={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Example",id:"example",level:2}],l={toc:u};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"differentiated-configurations"},"Differentiated Configurations"),(0,i.kt)("p",null,"In the KCL code of the application, you can set the required differential configuration by adding an ",(0,i.kt)("inlineCode",{parentName:"p"},"if-else")," statement with magic variables,\nsuch as setting different labels according to the actual deployed cluster name."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"About KCL semantics, please visit ",(0,i.kt)("a",{parentName:"p",href:"https://kcl-lang.io/"},"KCL")," for more details.")),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("p",null,"Please refer to the ",(0,i.kt)("a",{parentName:"p",href:"/docs/user_docs/guides/working-with-k8s/deploy-server#prerequisites"},"prerequisites")," in the guide for deploying an application."),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,"Pod Label in ",(0,i.kt)("inlineCode",{parentName:"p"},"base/bask.k"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},'appConfiguration: frontend.Server {\n    podMetadata.labels = {\n        if __META_CLUSTER_NAME in ["minikube", "kind"]:\n            cluster = __META_CLUSTER_NAME\n        else:\n            cluster = "other"\n    }\n}\n')),(0,i.kt)("p",null,"Through the above KCL code, you can get the actual cluster name according to the magic variables in the Konfig library,\nand selectively inject labels into the application container to be recognized by 3rd services or for other purposes."))}d.isMDXComponent=!0}}]);