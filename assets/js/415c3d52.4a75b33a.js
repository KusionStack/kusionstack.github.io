"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1964],{3905:function(e,n,t){t.d(n,{Zo:function(){return m},kt:function(){return f}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},m=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),s=p(t),f=a,d=s["".concat(l,".").concat(f)]||s[f]||u[f]||o;return t?r.createElement(d,i(i({ref:n},m),{},{components:t})):r.createElement(d,i({ref:n},m))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=s;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},28482:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return u}});var r=t(87462),a=t(63366),o=(t(67294),t(3905)),i=["components"],c={},l="configmap",p={unversionedId:"reference/model/kusion_models/kube/frontend/configmap/doc_configmap",id:"reference/model/kusion_models/kube/frontend/configmap/doc_configmap",title:"configmap",description:"Source: base/pkg/kusionmodels/kube/frontend/configmap/configmap.k",source:"@site/docs/reference/model/kusion_models/kube/frontend/configmap/doc_configmap.md",sourceDirName:"reference/model/kusion_models/kube/frontend/configmap",slug:"/reference/model/kusion_models/kube/frontend/configmap/doc_configmap",permalink:"/docs/reference/model/kusion_models/kube/frontend/configmap/doc_configmap",editUrl:"https://github.com/KusionStack/kusionstack.io/blob/main/docs/reference/model/kusion_models/kube/frontend/configmap/doc_configmap.md",tags:[],version:"current",lastUpdatedBy:"Hao Yuan",lastUpdatedAt:1663054820,formattedLastUpdatedAt:"9/13/2022",frontMatter:{},sidebar:"reference",previous:{title:"metadata",permalink:"/docs/reference/model/kusion_models/kube/frontend/common/doc_metadata"},next:{title:"container",permalink:"/docs/reference/model/kusion_models/kube/frontend/container/doc_container"}},m={},u=[{value:"Schema ConfigMap",id:"schema-configmap",level:2},{value:"Base Schema",id:"base-schema",level:3},{value:"Attributes",id:"attributes",level:3},{value:"Examples",id:"examples",level:3}],s={toc:u};function f(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"configmap"},"configmap"),(0,o.kt)("p",null,"Source: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/KusionStack/konfig/blob/main/base/pkg/kusion_models/kube/frontend/configmap/configmap.k"},"base/pkg/kusion_models/kube/frontend/configmap/configmap.k")),(0,o.kt)("h2",{id:"schema-configmap"},"Schema ConfigMap"),(0,o.kt)("p",null,"ConfigMap holds configuration data for pods to consume.",(0,o.kt)("br",null),"More info: ",(0,o.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/config-map-v1/%5C#ConfigMap"},"https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/config-map-v1/\\#ConfigMap")),(0,o.kt)("h3",{id:"base-schema"},"Base Schema"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"../common/doc_metadata#schema-metadata"},"@base.pkg.kusion_models.kube.frontend.common.Metadata")),(0,o.kt)("h3",{id:"attributes"},"Attributes"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name and Description"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,o.kt)("th",{parentName:"tr",align:null},"Required"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"data"),(0,o.kt)("br",null),"Data contains the configuration data."),(0,o.kt)("td",{parentName:"tr",align:null},"{str: str}"),(0,o.kt)("td",{parentName:"tr",align:null},"Undefined"),(0,o.kt)("td",{parentName:"tr",align:null},"optional")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"binaryData"),(0,o.kt)("br",null),"BinaryData contains the binary data."),(0,o.kt)("td",{parentName:"tr",align:null},"{str: str}"),(0,o.kt)("td",{parentName:"tr",align:null},"Undefined"),(0,o.kt)("td",{parentName:"tr",align:null},"optional")))),(0,o.kt)("h3",{id:"examples"},"Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'configmap = ConfigMap {\n    name = "my-configmap"\n    namespace = "my-configmap-namespace"\n    data = {\n        foo = "bar"\n        bar = "foo"\n    }\n}\n')))}f.isMDXComponent=!0}}]);