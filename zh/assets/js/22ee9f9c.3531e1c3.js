"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[49846],{3905:(e,i,n)=>{n.d(i,{Zo:()=>c,kt:()=>g});var t=n(67294);function r(e,i,n){return i in e?Object.defineProperty(e,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[i]=n,e}function a(e,i){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);i&&(t=t.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var i=1;i<arguments.length;i++){var n=null!=arguments[i]?arguments[i]:{};i%2?a(Object(n),!0).forEach((function(i){r(e,i,n[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(n,i))}))}return e}function s(e,i){if(null==e)return{};var n,t,r=function(e,i){if(null==e)return{};var n,t,r={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],i.indexOf(n)>=0||(r[n]=e[n]);return r}(e,i);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],i.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=t.createContext({}),l=function(e){var i=t.useContext(p),n=i;return e&&(n="function"==typeof e?e(i):o(o({},i),e)),n},c=function(e){var i=l(e.components);return t.createElement(p.Provider,{value:i},e.children)},u={inlineCode:"code",wrapper:function(e){var i=e.children;return t.createElement(t.Fragment,{},i)}},d=t.forwardRef((function(e,i){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),g=r,m=d["".concat(p,".").concat(g)]||d[g]||u[g]||a;return n?t.createElement(m,o(o({ref:i},c),{},{components:n})):t.createElement(m,o({ref:i},c))}));function g(e,i){var n=arguments,r=i&&i.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var p in i)hasOwnProperty.call(i,p)&&(s[p]=i[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<a;l++)o[l]=n[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},36726:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var t=n(87462),r=(n(67294),n(3905));const a={id:"image-upgrade"},o="Upgrade Image",s={unversionedId:"user-guides/using-kusion-cli/working-with-k8s/image-upgrade",id:"version-v0.14/user-guides/using-kusion-cli/working-with-k8s/image-upgrade",title:"Upgrade Image",description:"You can declare the application's container image via image field of the Container schema.",source:"@site/docs_versioned_docs/version-v0.14/5-user-guides/1-using-kusion-cli/2-working-with-k8s/4-image-upgrade.md",sourceDirName:"5-user-guides/1-using-kusion-cli/2-working-with-k8s",slug:"/user-guides/using-kusion-cli/working-with-k8s/image-upgrade",permalink:"/zh/docs/user-guides/using-kusion-cli/working-with-k8s/image-upgrade",draft:!1,editUrl:"https://github.com/KusionStack/kusionstack.io/blob/main/docs_versioned_docs/version-v0.14/5-user-guides/1-using-kusion-cli/2-working-with-k8s/4-image-upgrade.md",tags:[],version:"v0.14",lastUpdatedBy:"jinjia",lastUpdatedAt:1739183700,formattedLastUpdatedAt:"2025\u5e742\u670810\u65e5",sidebarPosition:4,frontMatter:{id:"image-upgrade"},sidebar:"kusion",previous:{title:"Expose Service",permalink:"/zh/docs/user-guides/using-kusion-cli/working-with-k8s/service"},next:{title:"Configure Resource Specification",permalink:"/zh/docs/user-guides/using-kusion-cli/working-with-k8s/resource-spec"}},p={},l=[{value:"Pre-requisite",id:"pre-requisite",level:2},{value:"Managing Workspace Configuration",id:"managing-workspace-configuration",level:2},{value:"Example",id:"example",level:2},{value:"Applying",id:"applying",level:2},{value:"Validation",id:"validation",level:2}],c={toc:l};function u(e){let{components:i,...n}=e;return(0,r.kt)("wrapper",(0,t.Z)({},c,n,{components:i,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"upgrade-image"},"Upgrade Image"),(0,r.kt)("p",null,"You can declare the application's container image via ",(0,r.kt)("inlineCode",{parentName:"p"},"image")," field of the ",(0,r.kt)("inlineCode",{parentName:"p"},"Container")," schema."),(0,r.kt)("p",null,"For the full ",(0,r.kt)("inlineCode",{parentName:"p"},"Container")," schema reference, please see ",(0,r.kt)("a",{parentName:"p",href:"/zh/docs/reference/modules/developer-schemas/workload/service#schema-container"},"here")," for more details."),(0,r.kt)("h2",{id:"pre-requisite"},"Pre-requisite"),(0,r.kt)("p",null,"Please refer to the ",(0,r.kt)("a",{parentName:"p",href:"/zh/docs/user-guides/using-kusion-cli/working-with-k8s/deploy-application#prerequisites"},"prerequisites")," in the guide for deploying an application."),(0,r.kt)("p",null,"The example below also requires you to have ",(0,r.kt)("a",{parentName:"p",href:"/zh/docs/user-guides/using-kusion-cli/working-with-k8s/deploy-application#initializing"},"initialized the project")," using the ",(0,r.kt)("inlineCode",{parentName:"p"},"kusion workspace create")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"kusion init")," command, which will create a workspace and also generate a ",(0,r.kt)("a",{parentName:"p",href:"/zh/docs/user-guides/using-kusion-cli/working-with-k8s/deploy-application#kclmod"},(0,r.kt)("inlineCode",{parentName:"a"},"kcl.mod")," file")," under the stack directory."),(0,r.kt)("h2",{id:"managing-workspace-configuration"},"Managing Workspace Configuration"),(0,r.kt)("p",null,"In the first guide in this series, we introduced a step to ",(0,r.kt)("a",{parentName:"p",href:"/zh/docs/user-guides/using-kusion-cli/working-with-k8s/deploy-application#initializing-workspace-configuration"},"initialize a workspace")," with an empty configuration. The same empty configuration will still work in this guide, no changes are required there."),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"Update the image value in ",(0,r.kt)("inlineCode",{parentName:"p"},"simple-service/dev/main.k"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import kam.v1.app_configuration as ac\n\nhelloworld: ac.AppConfiguration {\n    workload.containers.nginx: {\n        ...\n        # before: \n        # image = "gcr.io/google-samples/gb-frontend:v4"\n        # after: \n        image = "gcr.io/google-samples/gb-frontend:v5"\n        ...\n    }\n}\n')),(0,r.kt)("p",null,"Everything else in ",(0,r.kt)("inlineCode",{parentName:"p"},"main.k")," stay the same."),(0,r.kt)("h2",{id:"applying"},"Applying"),(0,r.kt)("p",null,"Re-run steps in ",(0,r.kt)("a",{parentName:"p",href:"/zh/docs/user-guides/using-kusion-cli/working-with-k8s/deploy-application#applying"},"Applying"),", update image is completed."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ kusion apply\n \u2714\ufe0e  Generating Spec in the Stack dev...                                                                                                                                                                                                     \nStack: dev  ID                                                               Action\n* \u251c\u2500     v1:Namespace:simple-service                                      UnChanged\n* \u251c\u2500     v1:Service:simple-service:simple-service-dev-helloworld-private  UnChanged\n* \u2514\u2500     apps/v1:Deployment:simple-service:simple-service-dev-helloworld  Update\n\n\n? Do you want to apply these diffs? yes\nStart applying diffs ...\n SUCCESS  UnChanged v1:Namespace:simple-service, skip                                                                                                                                                                                         \n SUCCESS  UnChanged v1:Service:simple-service:simple-service-dev-helloworld-private, skip                                                                                                                                                     \n SUCCESS  Update apps/v1:Deployment:simple-service:simple-service-dev-helloworld success                                                                                                                                                      \nUpdate apps/v1:Deployment:simple-service:simple-service-dev-helloworld success [3/3] \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 100% | 0s\nApply complete! Resources: 0 created, 1 updated, 0 deleted.\n")),(0,r.kt)("h2",{id:"validation"},"Validation"),(0,r.kt)("p",null,"We can verify the application container (in the deployment template) now has the updated image (v5) as defined in the container configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl get deployment -n simple-service -o yaml\n...\n    template:\n      ...\n      spec:\n        containers:\n        - env:\n          ...\n          image: gcr.io/google-samples/gb-frontend:v5\n          ...\n...\n")))}u.isMDXComponent=!0}}]);